---
- name: Generate email notifications to be consumed by Ansible Tower scheduled jobs
  hosts: local
  gather_facts: false
  
  tasks:
    - name: "Fail If Working Directory Is Not Provided"
      fail:
        msg: "directory var needs to be provided in order to ensure a safe working directory"
      when:
        - directory is undefined or (directory | trim) == ""
        - email_templates_directory is undefined or (email_templates_directory | trim) == ""

    - name: Read Engagement Data
      include_vars:
        file: "{{ directory }}/engagement.json"
        
    - name: Set vars based on engagement.json
      set_fact:
        start_date: "{{ (start_date | regex_replace('^(.*)T.*$', '\\1') | to_datetime('%Y-%m-%d')).strftime('%d %b %Y') }}"
        end_date: "{{ (end_date | regex_replace('^(.*)T.*$', '\\1') | to_datetime('%Y-%m-%d')).strftime('%d %b %Y') }}"
        env_end_date: "{{ (archive_date | regex_replace('^(.*)T.*$', '\\1') | to_datetime('%Y-%m-%d')).strftime('%d %b %Y') }}"
        ipa_host: "{{ 'ipa.apps.' + (hosting_environments[0].ocp_sub_domain | lower) + '.' + engagement_region | default('dev-1') + '.' + ocp_base_url }}"
        first_name: "first_name"
        user_name: "user_name"
        password: "password"
        env: "{{ env_end_date }}"

    - name: Check for existing email templates
      stat:
        path: "{{ directory }}/iac/inventories/notifications/group_vars/all/"
      
    - name: Copy email templates from main repo to engagement repo
      block:
        - name: "Copy email template directory to engagment repo and process as jinja2"
          template:
            src: "{{ item }}"
            dest: "{{ directory }}/iac/inventories/notifications/group_vars/all/{{ item | basename }}"
          with_fileglob:
            - "{{ email_templates_directory }}/hosting/residency/{{ language | default('en_us') }}/*"

        - name: "Create hosts file"
          copy:
            src: "hosts"
            dest: "{{ directory }}/iac/inventories/notifications/inventory/hosts"

      when: 
        - engagement_type == 'Residency'

